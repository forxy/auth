package auth.util

import java.security.SecureRandom

/**
 * Generates ASCII random sequence
 */
class RandomValueStringGenerator {

    private static final char[] DEFAULT_CODEC = "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
            .toCharArray()

    Random random = new SecureRandom()

    int length = 16


    String generate() {
        byte[] randomBytesSequence = new byte[length]
        random.nextBytes(randomBytesSequence)
        return getAuthorizationCodeString(randomBytesSequence)
    }

    /**
     * Convert these random bytes to a verifier string. The default implementation mods the bytes to fit into the
     * ASCII letters 1-9, A-Z, a-z .
     *
     * @param randomBytesSequence generated bytes.
     * @return random value string
     */
    protected static String getAuthorizationCodeString(byte[] randomBytesSequence) {
        char[] scaledChars = new char[randomBytesSequence.length]
        for (int i = 0; i < randomBytesSequence.length; i++) {
            scaledChars[i] = DEFAULT_CODEC[((randomBytesSequence[i] & 0xFF) % DEFAULT_CODEC.length)]
        }
        return new String(scaledChars)
    }
}
